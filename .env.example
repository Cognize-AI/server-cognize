# ================================
# Cognize API Server Configuration
# ================================
# Copy this file to .env and update with your actual values
# DO NOT commit .env files to version control

# ======================
# Server Configuration
# ======================
# Port number for the server to listen on
PORT=4000

# Environment mode: dev, staging, prod
ENVIRONMENT=dev

# ======================
# Database Configuration
# ======================
# PostgreSQL connection string
# Format: postgres://[username[:password]@][host[:port]]/database[?options]

# Local development (with Docker)
DB_STRING=postgres://root:root@localhost:5432/cognize?sslmode=disable

# Production example (uncomment and modify for production)
# DB_STRING=postgres://username:password@db-host:5432/cognize?sslmode=require

# ======================
# Authentication & Security
# ======================
# JWT signing secret - MUST be at least 32 characters long
# Generate with: openssl rand -hex 32
JWT_SECRET=change-this-to-a-long-secure-random-string-32-chars-min

# Google OAuth Configuration
# Get these from Google Cloud Console > APIs & Services > Credentials
GOOGLE_OAUTH_CLIENT_ID=your-google-oauth-client-id.apps.googleusercontent.com
GOOGLE_OAUTH_CLIENT_SECRET=your-google-oauth-client-secret
GOOGLE_OAUTH_REDIRECT_URL=http://localhost:3000/auth/callback

# ======================
# Email Configuration (Optional)
# ======================
# SMTP settings for sending emails
# Gmail example:
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# AWS SES example:
# SMTP_HOST=email-smtp.us-east-1.amazonaws.com
# SMTP_PORT=587
# SMTP_USERNAME=your-ses-smtp-username
# SMTP_PASSWORD=your-ses-smtp-password

# ======================
# Logging Configuration (Optional)
# ======================
# Axiom logging service integration
# Get these from axiom.co after creating an account
AXIOM_TOKEN=your-axiom-api-token
AXIOM_ORG=your-axiom-organization
AXIOM_DATASET=cognize-logs

# ======================
# Additional Security (Optional)
# ======================
# Additional encryption secret for sensitive operations
# Generate with: openssl rand -hex 32
ENC_SECRET=another-long-secure-random-string-for-encryption

# ======================
# Development Notes
# ======================
# 1. For production, use strong, randomly generated secrets
# 2. Enable SSL/TLS for database connections in production
# 3. Use managed database services (AWS RDS, Google Cloud SQL, etc.)
# 4. Never commit this file to version control
# 5. Rotate secrets regularly in production environments
# 6. Use environment-specific configuration files